@page
@model RegisterModel
@{
    ViewData["Title"] = "Register";
}
<head>
    <meta name="google-signin-client_id" content="YOUR_CLIENT_ID.apps.googleusercontent.com">
</head>

<style>
    body {
        background-color:slategrey
    }

    h1, h3 {
        text-align: center;
        margin: 20px 0px;
    }

    h2 {
        text-align: center;
    }    

    #my-signin2 {
        margin: 15px 125px;
    }
</style>
<h1 style="color:white">@ViewData["Title"]</h1>

<div class="row">
    <div class="col-4"></div>
    <div class="col-4 border border-2" style="background-color: white; border-radius: 10px">
        <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post">
            <h2>Create a new account.</h2>
            <hr />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-floating mb-3">
                <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" />
                <label asp-for="Input.Email"></label>
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.Password" class="form-control" autocomplete="new-password" aria-required="true" />
                <label asp-for="Input.Password"></label>
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" />
                <label asp-for="Input.ConfirmPassword"></label>
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Input.FirstName" class="form-control" autocomplete="new-FirstName" aria-required="true" />
                <label asp-for="Input.FirstName"></label>
                <span asp-validation-for="Input.FirstName" class="text-danger"></span>
            </div>

            <div class="form-floating mb-3">
                <input asp-for="Input.LastName" class="form-control" autocomplete="new-LastName" aria-required="true" />
                <label asp-for="Input.LastName"></label>
                <span asp-validation-for="Input.LastName" class="text-danger"></span>
            </div>
            <button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary">Register</button>
            
            <section>
                <hr />
                <h3>OR</h3>
                @{
                    if ((Model.ExternalLogins?.Count ?? 0) == 0)
                    {
                        <div>
                            <p>
                                There are no external authentication services configured. See this <a href="https://go.microsoft.com/fwlink/?LinkID=532715">
                                    article
                                    about setting up this ASP.NET application to support logging in via external services
                                </a>.
                            </p>
                        </div>
                    }
                    else
                    {
                        <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                            <div>
                                <p id="external-para">
                                    @foreach (var provider in Model.ExternalLogins!)
                                    {
                                        <div id="my-signin2">
                                            <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                                        </div>
                                        <script>
                                            function onSuccess(googleUser) {
                                                console.log('Logged in as: ' + googleUser.getBasicProfile().getName());
                                            }
                                            function onFailure(error) {
                                                console.log(error);
                                            }
                                            function renderButton() {
                                                gapi.signin2.render('my-signin2', {
                                                    'scope': 'profile email',
                                                    'width': 240,
                                                    'height': 50,
                                                    'longtitle': true,
                                                    'theme': 'dark',
                                                    'onsuccess': onSuccess,
                                                    'onfailure': onFailure
                                                });
                                            }
                                        </script>

                                        <script src="https://apis.google.com/js/platform.js?onload=renderButton" async defer></script>

                                    }
                                </p>
                            </div>
                        </form>
                    }
                }
            </section>
        </form>
    </div>
    <div class="col-4"></div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
